#端口号
server.port=56000
#实例名称
spring.application.name= sharding_quick
#表示后发现的bean会覆盖之前相同名称的bean
spring.main.allow-bean-definition-overriding=true
#该配置项就是指将带有下划线的表字段映射为驼峰格式的实体类属性
mybatis.configuration.map-underscore-to-camel-case=true
#以下是分片规则配置

##定义数据源
sharding.jdbc.datasource.names=m1
#数据源1
sharding.jdbc.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.m1.driver-class-name =com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.m1.url=jdbc:mysql://127.0.0.1:3306/order_db?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone =Asia/Shanghai
sharding.jdbc.datasource.m1.username=root
sharding.jdbc.datasource.m1.password=123456


#指定t_order表的数据分布情况，配置数据节点
sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=m1.t_order_${0..1}

#指定t_order表的主键生成策略为SNOWFLAKE
#spring.shardingsphere.sharding.tables.t_order.keyGenerator.column=order_id
#spring.shardingsphere.sharding.tables.t_order.keyGenerator.type=SNOWFLAKE

#分表策略，指定t_order表的分片策略，分片策略包括分片键和分片算法
sharding.jdbc.config.sharding.tables.t_order.tableStrategy.standard.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.tableStrategy.standard.precise-algorithm-class-name=com.itheima.domain.TableComplexKeysShardingAlgorithm


#打开sql输出日志
spring.shardingsphere.props.sql.show=true

#打开swagger
swagger.enable=true

#日志级别
logging.level.root=info
logging.level.org.springframework.web=info
logging.level.com.itheima=info
logging.level.druid.sql=info
























